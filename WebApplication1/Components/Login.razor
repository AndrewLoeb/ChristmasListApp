@using WebApplication1.Models
@using WebApplication1.Services
@using WebApplication1.Components
@using Microsoft.AspNetCore.Components.Web
@inject googleSheetsListService ListService
@inject userIdService UserIdService
@inject allListsService allListsService

@using Blazored.Toast
@using Blazored.Toast.Services
@inject IToastService toastService

<BlazoredToasts Timeout="10"
                ShowProgressBar="true"
                IconType="IconType.FontAwesome"
                ErrorClass="error-toast-override"
                ErrorIcon="fa fa-exclamation-triangle" />

@if (!showLists)
{
    <div class="row justify-content-center">
        <div class="col-12 col-md-8 col-lg-6">
            <h3 class="mb-4">Login</h3>

            <form @onsubmit="Set_ShowLists">
                <div class="mb-3">
                    <label for="userSelect" class="form-label">Select Elf</label>
                    <select id="userSelect" class="form-control" @bind="userId">
                        <option value="">Select Elf... </option>
                        @foreach (UserModel user in userList)
                        {
                            <option value="@user.Name">  @user.Name </option>
                        }
                    </select>
                </div>

                <div class="mb-3">
                    <label for="password" class="form-label">Password</label>
                    <input id="password" type="password" placeholder="Enter Password" class="form-control" @bind="password" />
                </div>

                <div class="mb-3">
                    <button type="button" class="btn btn-success w-100" @onclick="Set_ShowLists" disabled="@isLoading">
                        @if (isLoading)
                        {
                            <span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>
                            <span>Loading...</span>
                        }
                        else
                        {
                            <span>Activate!</span>
                        }
                    </button>
                </div>
            </form>

            @if (!string.IsNullOrEmpty(LoadingMessage) && !isLoading)
            {
                <div class="alert alert-info mt-3">
                    @LoadingMessage
                </div>
            }
        </div>
    </div>
}


@if (showLists)
{
    <h3> Welcome @UserIdService.userId!</h3>
    <div class="btn-group btn-group-lg" role="group">
        <button type="button" class="btn btn-outline-secondary @(tabIndex == 1 ? "active" : "")" @onclick="Set_MyList">My List</button>
        <button type="button" class="btn btn-outline-secondary @(tabIndex == 2 ? "active" : "")" @onclick="Set_ListReview">List Review</button>
        <button type="button" class="btn btn-outline-secondary @(tabIndex == 3 ? "active" : "")" @onclick="Set_MyGifts">My Gifts</button>
    </div>
    <br />

    <div>
        @if (tabIndex == 1)
        {
            <MyList></MyList>
        }
        @if (tabIndex == 2)
        {
            <ListReview></ListReview>
        }
        @if (tabIndex == 3)
        {
            <MyGifts></MyGifts>
        }
    </div>
}


@code {

    public string userId = "";
    public string password { get; set; }
    public bool showLists = false;
    public int tabIndex = 0;
    public string LoadingMessage = "";
    public bool isLoading = false;

    private List<UserModel> _userList;
    private List<ListModel> _allLists;

    public List<UserModel> userList
    {
        get
        {
            if (_userList == null)
            {
                try
                {
                    _userList = ListService.Users_GetList();
                }
                catch (Exception ex)
                {
                    toastService.ShowError($"Error loading users: {ex.Message}");
                    LoadingMessage = "Error loading data. Please try again.";
                    _userList = new List<UserModel>(); // Return empty list to prevent further errors
                }
            }
            return _userList;
        }
    }

    public List<ListModel> AllLists
    {
        get
        {
            if (_allLists == null)
            {
                try
                {
                    _allLists = ListService.GetAllLists(userList);
                }
                catch (Exception ex)
                {
                    toastService.ShowError($"Error loading lists: {ex.Message}");
                    LoadingMessage = "Error loading data. Please try again.";
                    _allLists = new List<ListModel>(); // Return empty list to prevent further errors
                }
            }
            return _allLists;
        }
    }


    public async Task Set_ShowLists()
    {
        isLoading = true;
        LoadingMessage = "Loading...";
        StateHasChanged();
        await Task.Delay(10); // Small delay to ensure UI updates

        try
        {
            await UserIdService.SetUser(userId);
            await allListsService.SetAllLists(userList, AllLists);

            if (password == null)
            {
                LoadingMessage = "Enter Password";
                return;
            }

            if (password.Equals(userList.Where(u => u.Name.Equals(userId)).Select(u => u.Password).FirstOrDefault()))
            {
                showLists = true;
                tabIndex = 1;
                LoadingMessage = "";
            }
            else
            {
                LoadingMessage = "Check Password.";
            }
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }

    public async Task Set_MyList()
    { tabIndex = 1; }
    public async Task Set_ListReview()
    { tabIndex = 2; }
    public async Task Set_MyGifts()
    { tabIndex = 3; }
}
