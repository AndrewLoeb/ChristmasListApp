@using WebApplication1.Models
@using WebApplication1.Services
@using WebApplication1.Components
@using Microsoft.AspNetCore.Components.Web
@inject googleSheetsListService ListService
@inject userIdService UserIdService
@inject allListsService allListsService

@using Blazored.Toast
@using Blazored.Toast.Services
@inject IToastService toastService

<h2>List Review</h2>

<div>
    <select class="form-control" @bind="listUserId">
        <option value="">Select Elf... </option>
        @foreach (ListModel List in allListsService.AllLists)
        {
            @if (List.Name != UserIdService.userId)
            {
                <option value="@List.Name"> @List.dropDownStr  </option>
            }
        }
    </select>
</div>

@if (listUserId != "")
{
    <div>
        <h3> @listUserId's List: </h3>
    </div>
    <div class="row">
        @foreach (ItemModel item in listUserItems.List)
        {
            <div class="col-12 col-sm-6 col-md-4 col-lg-3 mb-4">
                <div class="card h-100">
                    @if (!string.IsNullOrWhiteSpace(item.ImageUrl))
                    {
                        <img src="@item.ImageUrl" class="card-img-top" alt="@item.Item" style="max-height: 200px; object-fit: contain; padding: 10px;" />
                    }
                    <div class="card-body" style="position:relative">
                        <h6>
                            @if (item.Link != "")
                            {<span class="badge badge-info"> Link </span>}
                            @if (item.Link != "")
                            {<a href="@item.Link" target="_blank" class="stretched-link"></a>}
                        </h6>
                        <h5 class="card-title">
                            @item.Item
                        </h5>
                        <p class="card-text">
                            @item.Notes
                        </p>

                    </div>
                    <div class="card-footer">
                        @if (item.Claimer == UserIdService.userId)
                        {<div> <button class="btn btn-warning btn-sm" @onclick="() => unclaimItem(item)">Unclaim</button> </div>}
                        else if (item.Claimer == "")
                        {<div> <button class="btn btn-success btn-sm" @onclick="() => claimItem(item)">Claim!</button> </div>}
                        else
                        {
                            {<span class="badge badge-primary"> Claimed </span>}
                        }
                        <small class="text-muted">
                            Updated at @item.DateUpdated
                        </small>
                    </div>
                </div>
            </div>
        }
    </div>

    <hr />

    <h3>Notes:</h3>
    <p> @listUserNotes </p>
}

@code {
    public string listUserId = "";

    public dynamic listUserNotes => allListsService.userList.FirstOrDefault(u => u.Name == listUserId).Notes;
    public dynamic listUserItems => allListsService.AllLists.FirstOrDefault(u => u.Name == listUserId);

    public void claimItem(ItemModel item)
    {
        ListService.ClaimItem(item.ItemId, UserIdService.userId);
        allListsService.AllLists.FirstOrDefault(u => u.Name == listUserId).List.FirstOrDefault(i => i.ItemId == item.ItemId).Claimer = UserIdService.userId;
        toastService.ShowSuccess("You claimed " + item.Item + " for " + listUserId + "!");
    }
    public void unclaimItem(ItemModel item)
    {
        ListService.UnclaimItem(item.ItemId);
        allListsService.AllLists.FirstOrDefault(u => u.Name == listUserId).List.FirstOrDefault(i => i.ItemId == item.ItemId).Claimer = "";
        toastService.ShowInfo("Unclaimed " + item.Item);
    }
}
