@using WebApplication1.Models
@using WebApplication1.Services
@using WebApplication1.Components
@using Microsoft.AspNetCore.Components.Web
@inject googleSheetsListService ListService
@inject userIdService UserIdService

@using Blazored.Toast
@using Blazored.Toast.Services
@inject IToastService toastService

@inherits Login

<BlazoredToasts Timeout="5"
                ShowProgressBar="true"
                IconType="IconType.FontAwesome"
                SuccessClass="success-toast-override"
                SuccessIcon="fa fa-bar-chart" />


<h2>My List</h2>
<div class="table-responsive-md">
    <table class="table table-striped">
        <thead>
            <tr>
                <th width="150px"></th>
                <th width="400px">Item</th>
                <th width="400px">Notes</th>
                <th width="200px">Link</th>
                <th width="200px">Date Added</th>
            </tr>
        </thead>
        <tbody>
            @foreach (ItemModel item in myList)
    {
            @if (@item.ItemId == editItemId)
        {
            <tr>
                <td>    <button type="button" class="btn btn-success" @onclick="() => submitEditItem(item)">Save</button> </td>
                <td> <form> <input type="text" class="form-control" @bind="@item.Item" size="40px" /> </form> </td>
                <td> <form> <input type="text" class="form-control" @bind="@item.Notes" size="40px" /> </form> </td>
                <td><form>  <input type="text" class="form-control" @bind="@item.Link" onclick="this.select();" size="20" /> </form></td>
                <td></td>
            </tr>
        }
        else
        {
        <tr>
            <td>
                <div class="btn-group" role="group">
                    <button type="button" class="btn btn-secondary" @onclick="() => editItem(item)">Edit</button>
                    <button type="button" class="btn btn-secondary" @onclick="() => deleteItem(item)">Delete</button>
                </div>
            </td>
            <td>@item.Item</td>
            <td style="word-wrap:break-word; max-width:400px"> @item.Notes </td>
            <td style="word-wrap:break-word; max-width:400px"><a href="@item.Link" target="_blank"> @item.Link</a></td>
            <td>@item.DateUpdated</td>
        </tr>
        }
    }
        </tbody>
    </table>
</div>
    <br />
    <div>
        Add Item: 
        <form>
            <div class="form-row">
                <div class="col">
                    <input type="text" class="form-control" placeholder="New Item" @bind="newItemItem" onclick="this.select();" />
                </div>
                <div class="col">
                    <input type="text" class="form-control" placeholder="Notes (Optional)" @bind="newItemNotes" onclick="this.select();" />
                </div>
                <div class="col">
                    <input type="text" class="form-control" placeholder="Link (Optional)" @bind="newItemLink" onclick="this.select();" size="15" />
                </div>
                <div class="col">
                    <button type="button" class="btn btn-success" @onclick="addItem">Add</button>
                </div>
            </div>
        </form>
    </div>

    <hr />
    <h3>Notes to Share:</h3>
    @if (editNotesFlag == 0)
{
    <p> @myNotes </p>
    <button type="button" class="btn btn-secondary" @onclick="editNotes">Edit Notes</button>
}
else
{
    <textarea class="form-control" cols="40" rows="5" @bind="newNotes"></textarea>
    <button type="button" class="btn btn-success" @onclick="submitEditNotes">Save Notes</button>
}


    @code
{

        public dynamic myList => ListService.GetMyList(UserIdService.userId);

        public dynamic myNotes => ListService.Users_GetList().FirstOrDefault(u => u.Name == UserIdService.userId).Notes;

        public string newItemItem = "";
        public string newItemNotes = "";
        public string newItemLink = "";
        //public string newItemItem = "New Item";
        //public string newItemNotes = "Notes (Optional)";
        //public string newItemLink = "Link (Optional)";

        public int editItemId = 0;
        public int editNotesFlag = 0;
        public string newNotes = "";

        public void editNotes()
        {
            newNotes = myNotes;
            editNotesFlag = 1;
        }
        public void submitEditNotes()
        {
            ListService.UpdateNotes(UserIdService.userId, newNotes);
            editNotesFlag = 0;
            toastService.ShowSuccess("Saved Notes");
        }
        public void addItem()
        {
            System.Console.WriteLine($"Added: {newItemItem}");

            if (newItemNotes.Equals("Notes (Optional)")) { newItemNotes = ""; }
            if (newItemLink.Equals("Link (Optional)")) { newItemLink = ""; }

            ListService.AddItem(UserIdService.userId, newItemItem, newItemNotes, newItemLink);
            toastService.ShowSuccess("Added " + newItemItem + "!");

            //newItemItem = "New Item";
            //newItemNotes = "Notes (Optional)";
            //newItemLink = "Link (Optional)";
            newItemItem = "";
            newItemNotes = "";
            newItemLink = "";

        }
        public void editItem(ItemModel item)
        {
            editItemId = item.ItemId;
        }
        public void submitEditItem(ItemModel item)
        {
            ListService.UpdateItem(item.ItemId, item.Item, item.Notes, item.Link);
            editItemId = 0;
            toastService.ShowSuccess("Saved " + item.Item + "!");
        }
        public void deleteItem(ItemModel item)
        {
            ListService.DeleteItem(item.ItemId);
            toastService.ShowSuccess("Deleted " + item.Item + "!");
        }

    }
