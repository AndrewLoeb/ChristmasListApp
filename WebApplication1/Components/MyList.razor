@using WebApplication1.Models
@using WebApplication1.Services
@using WebApplication1.Components
@using Microsoft.AspNetCore.Components.Web
@inject googleSheetsListService ListService
@inject userIdService UserIdService

@using Blazored.Toast
@using Blazored.Toast.Services
@inject IToastService toastService

@inherits Login

<BlazoredToasts Timeout="5"
                ShowProgressBar="true"
                IconType="IconType.FontAwesome"
                SuccessClass="success-toast-override"
                SuccessIcon="fa fa-bar-chart" />

@{var badgeType1 = "";
    var badgeType2 = ""; }

<br />
<table>
    <tr>
        <th></th>
        <th>Item</th>
        <th>Link</th>
        <th>Date Added</th>
        <th></th>
        <th></th>
    </tr>
    @foreach (ItemModel item in myList)
    {
        @if (@item.ItemId == editItemId)
        {
            <tr>
                <td>@item.ItemId</td>
                <td> <form> <input type="text" @bind="@item.Item" onclick="this.select();" /> </form> </td>
                <td><form>  <input type="text" @bind="@item.Link" onclick="this.select();" /> </form></td>
                <td></td>
                <td>    <button @onclick="() => submitEditItem(item)">Save</button> </td>
                <td> </td>
            </tr>
}
        else {
            <tr>
                <td>@item.ItemId</td>
                <td>@item.Item</td>
                <td><a href="@item.Link" target="_blank"> @item.Link</a></td>
                <td>@item.DateUpdated</td>
                <td>    <button @onclick="() => editItem(item)">Edit</button> </td>
                <td>    <button @onclick="() => deleteItem(item)">Delete</button> </td>
            </tr>
        }
    }
</table>
<br />
<div>
    Add Item: <form> <input type="text" @bind="newItemItem" onclick="this.select();" /> <input type="text" @bind="newItemLink" onclick="this.select();" /> </form>
    <button @onclick="addItem">Add</button>
</div>


@code
{

    //public List<ItemModel> myList = new List<ItemModel>();

    public dynamic myList => ListService.GetMyList(UserIdService.userId);

    public string newItemItem = "New Item";
    public string newItemLink = "Link (Optional)";

    public int editItemId = 0;

    public void addItem()
    {
        System.Console.WriteLine($"Added: {newItemItem}");

        if (newItemLink.Equals("Link (Optional)")) { newItemLink = ""; }

        ListService.AddItem(UserIdService.userId, newItemItem, newItemLink);

        newItemItem = "New Item";
        newItemLink = "Link (Optional)";
    }

    public void editItem(ItemModel item)
    {
        editItemId = item.ItemId;
    }
    public void submitEditItem(ItemModel item)
    {
        ListService.UpdateItem(item.ItemId, item.Item, item.Link);
        editItemId = 0;
    }

    public void deleteItem(ItemModel item)
    {
        ListService.DeleteItem(item.ItemId);
    }


    UserModel selectedSpice;
    string selectedSpiceName;
    Random random = new Random();
    List<string> pinchList = new List<string> { "a pinch", "a dash", "a shake", "a bit", "a little bit", "a few sprinkles", "an essence", "just the right amount",
                     "a ton", "a touch", "a hit", "a blast", "some", "an amount"};

    void SelectSpice(string spiceName)
    {
        selectedSpiceName = spiceName;
        selectedSpice = ListService.Users_GetList().First(x => x.Name == spiceName);


        int index = random.Next(pinchList.Count);
        toastService.ShowSuccess("Logged " + pinchList[index] + " of " + spiceName, "Yum!");
        PrintSpiceName();
    }

    void PrintSpiceName()
    {
        System.Console.WriteLine($"You clicked: {selectedSpice.Name}");
        //SpiceService.AddLog(selectedSpice.Name);
    }

}